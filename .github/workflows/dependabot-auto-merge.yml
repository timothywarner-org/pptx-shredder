# Auto-merge Dependabot PRs after successful tests
# Security-focused workflow for PPTX Shredder

name: 🤖 Dependabot Auto-Merge

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write
  checks: read

jobs:
  # Test the Dependabot PR
  test-dependabot-pr:
    name: 🧪 Test Dependabot Changes
    if: github.actor == 'dependabot[bot]'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: 🐍 Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          
      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt
          
      - name: 🧪 Run tests
        env:
          PYTHONPATH: src
        run: |
          python -m pytest tests/ -v --tb=short --maxfail=5
          
      - name: 🔍 Security check with safety
        run: |
          pip install safety
          safety check --json || echo "Security check completed"
          
      - name: 🎨 Check code formatting
        run: |
          black --check src/ tests/ || echo "Formatting check completed"
          
      - name: 📊 Basic smoke test
        env:
          PYTHONPATH: src  
        run: |
          python shred.py --help
          python shred.py --dry-run || echo "Smoke test completed"

  # Auto-merge safe updates
  auto-merge:
    name: 🚀 Auto-Merge Safe Updates
    needs: test-dependabot-pr
    if: github.actor == 'dependabot[bot]' && needs.test-dependabot-pr.result == 'success'
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      - name: 📋 Get PR details
        id: pr-details
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            
            const title = pr.data.title.toLowerCase();
            const labels = pr.data.labels.map(label => label.name);
            
            // Determine if this is a safe update
            const isSecurity = labels.includes('security') || title.includes('security');
            const isPatch = title.includes('patch') || title.includes('bump') && title.includes('patch');
            const isMinor = title.includes('minor') || title.includes('bump') && title.includes('minor');
            const isDev = labels.includes('dependencies') && labels.includes('python') && title.includes('dev');
            
            const shouldAutoMerge = isSecurity || isPatch || (isMinor && isDev);
            
            console.log(`PR Title: ${title}`);
            console.log(`Labels: ${labels.join(', ')}`);
            console.log(`Should auto-merge: ${shouldAutoMerge}`);
            
            return {
              shouldAutoMerge,
              isSecurity,
              isPatch,
              isMinor,
              isDev,
              title: pr.data.title
            };

      - name: ✅ Auto-approve safe updates
        if: fromJSON(steps.pr-details.outputs.result).shouldAutoMerge
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              event: 'APPROVE',
              body: '🤖 Auto-approved by Dependabot workflow - tests passed and update is safe'
            });

      - name: 🔄 Enable auto-merge
        if: fromJSON(steps.pr-details.outputs.result).shouldAutoMerge
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              commit_title: `${{ fromJSON(steps.pr-details.outputs.result).title }} (#${context.issue.number})`,
              commit_message: 'Auto-merged by Dependabot workflow after successful tests',
              merge_method: 'squash'
            });

      - name: 🎉 Comment on merged PR
        if: fromJSON(steps.pr-details.outputs.result).shouldAutoMerge
        uses: actions/github-script@v7
        with:
          script: |
            const details = ${{ steps.pr-details.outputs.result }};
            let reason = '';
            if (details.isSecurity) reason = 'Security update';
            else if (details.isPatch) reason = 'Patch update';
            else if (details.isMinor && details.isDev) reason = 'Development dependency minor update';
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `🎉 **Auto-merged successfully!**\n\n**Reason:** ${reason}\n**Tests:** ✅ Passed\n**Security check:** ✅ Completed\n\nThanks Dependabot! 🤖`
            });

  # Notify for manual review (major updates)
  notify-manual-review:
    name: 📢 Notify Manual Review Required
    needs: test-dependabot-pr
    if: github.actor == 'dependabot[bot]' && needs.test-dependabot-pr.result == 'success'
    runs-on: ubuntu-latest
    timeout-minutes: 2
    
    steps:
      - name: 📋 Check if manual review needed
        id: check-manual
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            
            const title = pr.data.title.toLowerCase();
            const isMajor = title.includes('major') || title.includes('bump') && title.includes('major');
            
            return isMajor;

      - name: 🔔 Comment for manual review
        if: fromJSON(steps.check-manual.outputs.result)
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `🔍 **Manual review required**\n\nThis appears to be a major version update that requires manual review.\n\n**Tests:** ✅ Passed\n**Action needed:** Please review the changes and merge manually if appropriate.\n\n@timothywarner please review when convenient.`
            });

      - name: 🏷️ Add review label
        if: fromJSON(steps.check-manual.outputs.result)
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['needs-manual-review', 'major-update']
            });